name: Coverage

run-name: "Workflow CI/CD Steps: coverage"

on:
  workflow_call:
    inputs:
      CACHING_MODE:
        required: true
        type: string

env:
  IMAGE_NAME: zencash/sc-ci-base
  IMAGE_TAG: noble_rust-stable_20240611
  DOCKER_COMPOSE_CMD: "docker compose -f ${GITHUB_WORKSPACE}/ci/docker-compose.yml run --rm cargo-container"
  DOCKER_BUILD_DIR: /build
  DOCKER_CARGO_HOME: /tmp/.cargo
  CARGO_BINARIES_INSTALL: "cargo-llvm-cov"
  CMAKE_INSTALL: true
  LLD_INSTALL: true

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Free up disk space
        if: ${{ !env.ACT }}
        run: ${GITHUB_WORKSPACE}/.github/scripts/clean_ci.sh

      - name: Set up deps cache
        run: mkdir deps

      - name: Restore common cache
        if: ${{ !env.ACT && inputs.CACHING_MODE == 'CACHE_RESTORE' }}
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            deps/
          key: common-cache
    
      - name: Restore coverage cache
        if: ${{ !env.ACT && inputs.CACHING_MODE == 'CACHE_RESTORE' }}
        uses: actions/cache/restore@v3
        with:
          path: |
            target/
          key: coverage-cache

      - name: Set docker env vars
        run: |
          echo "USER_ID=$(id -u)" >> $GITHUB_ENV
          echo "GRP_ID=$(id -g)" >> $GITHUB_ENV

      - name: Cargo coverage
        run: |
          ${{ env.DOCKER_COMPOSE_CMD }} /bin/bash -c '
            set -o pipefail \
            && cargo llvm-cov clean --workspace \
            && find . -name "*.profraw" -delete \
            && cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info \
            && cargo llvm-cov report --json --output-path coverage_report.json --summary-only \
            && cargo llvm-cov report | tee coverage_summary.txt
          '

      - name: Save coverage cache
        if: ${{ !env.ACT && inputs.CACHING_MODE == 'CACHE_SAVE' }}
        uses: actions/cache/save@v3
        with:
          path: |
            target/
          key: coverage-cache

      - name: Upload output(s)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-output
          path: coverage_report.json
          if-no-files-found: warn
          retention-days: 1
          compression-level: 0
          overwrite: true
