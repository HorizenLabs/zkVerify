name: Build, Test, and Publish Docker Image

on:
  workflow_call:
    inputs:
      artifact_name:
        description: "Name of artifact of Docker image"
        required: true
        type: string

jobs:
  execute-e2e-tests:
    runs-on: ubuntu-latest
    name: Execute E2E Tests
    outputs:
      docker_image_tag: ${{ steps.set-docker-tag.outputs.docker_image_tag }}
      test_status: ${{ steps.runtest.outputs.test_status }} 
    steps:
      - name: E2E
        run: echo "execute-e2e-tests with ${{ inputs.artifact_name }}"

      - name: Set Docker tag
        id: set-docker-tag
        run: |
          tag=$(echo "${{ inputs.artifact_name }}" | sed -n 's/.*:\(.*\)/\1/p')
          echo "tag ${tag}"
          echo "::set-output name=docker_image_tag::$tag"

      - name: Run test
        id: run-test
        uses: 'HorizenLabs/zkVerify-qa/.github/actions/e2e-test@main'
        with:
          artifact_name: ${{ needs.inputs.artifact_name }}
          zkverify_docker_tag: ${{ steps.set-docker-tag.outputs.docker_image_tag }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  publish-docker-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    # needs: execute-e2e-tests # Wait for e2e tests to finish
    # if: ${{ needs.execute-e2e-tests.outputs.test_status == 'success' }}
    steps:
      - name: Tag
        run: echo "publish-docker-image with tag ${{ needs.execute-e2e-tests.outputs.docker_image_tag }}"
      - name: Docker image
        run: echo "publish-docker-image with image ${{ inputs.artifact_name }}"

      - name: Git checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Download zkVerify Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ./
      
      - name: Build/Publish Docker image
        env:
          RELEASE_BRANCH: release
          MAINTAINERS_KEYS: ${{ vars.MAINTAINERS_KEYS }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        run: |
          source "${GITHUB_WORKSPACE}/ci/setup_env.sh"
          "${GITHUB_WORKSPACE}/ci/docker.sh" --image-artifact ${{ needs.build-docker-image.outputs.artifact_name }}

      - name: Upload runtime artifact
        uses: actions/upload-artifact@v4
        with:
          name: zkv_runtime.compact.compressed.wasm
          path: ./zkv_runtime.compact.compressed.wasm
