name: System Tests and Publish Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feat/web3-943-post-merge-pipeline
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: read

jobs:
  execute-system-tests:
    name: Execute System Tests
    uses: HorizenLabs/zkVerify-qa/.github/workflows/CI-e2e-tests.yml@chore/e2e-test-adapt-to-reuse
    with:
      zkverify_tag: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || 'latest' }}
      zkverify_branch: ${{ startsWith(github.ref, 'refs/heads/') && github.ref_name || 'main' }}
    secrets:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      QA_SLACK_WEBHOOK_URL: ${{ secrets.QA_SLACK_WEBHOOK_URL }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: execute-system-tests # Wait for e2e tests to finish

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0 # Necessary for git operations in setup_env.sh

      - name: Get Short Commit Hash
        id: get_short_commit_hash
        run: |
          echo "short_commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Environment Variables and Build
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          PRIVATE_DOCKER_REPO: horizenlabs/zkverify-dev
          GITHUB_REF_NAME: ${{ github.ref_name }}
          COMMIT_HASH: ${{ steps.get_short_commit_hash.outputs.short_commit_hash }}

        run: |
          # Source the setup script to set up environment variables
          source "${GITHUB_WORKSPACE}/ci/setup_env.sh"

          # Overwrite environment variables if building from main branch
          if [[ "${{ startsWith(github.ref, 'refs/heads/main') }}" == 'true' ]]; then
            export IS_A_RELEASE="false"
            export DEV_RELEASE="true"
            export PROD_RELEASE="false"
            export TEST_RELEASE="false"
          fi

          # Run the docker build and publish script
          "${GITHUB_WORKSPACE}/ci/docker.sh"
