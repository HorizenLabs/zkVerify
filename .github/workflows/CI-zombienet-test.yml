name: Zombienet-test

run-name: "Workflow CI/CD Steps: test on zombienet"

on:
  workflow_call:
    inputs:
      CACHING_MODE:
        required: true
        type: string

env:
  IMAGE_NAME: zencash/sc-ci-base
  IMAGE_TAG: noble_rust-stable_latest
  DOCKER_COMPOSE_CMD: "docker compose -f ${GITHUB_WORKSPACE}/ci/docker-compose.yml run --rm cargo-container"
  DOCKER_BUILD_DIR: /build
  DOCKER_CARGO_HOME: /tmp/.cargo
  CMAKE_INSTALL: true

jobs:
  zombienet-test:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Set up deps cache
        run: mkdir deps

      - name: Restore common cache
        if: ${{ !env.ACT && inputs.CACHING_MODE == 'CACHE_RESTORE' }}
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            deps/
          key: common-cache
    
      - name: Restore zombienet-test cache
        if: ${{ !env.ACT && inputs.CACHING_MODE == 'CACHE_RESTORE' }}
        uses: actions/cache/restore@v3
        with:
          path: |
            target/
          key: build-cache # same cache as "build" job (since "cargo build --release" is used in both jobs)

      - name: Set docker env vars
        run: |
          echo "USER_ID=$(id -u)" >> $GITHUB_ENV
          echo "GRP_ID=$(id -g)" >> $GITHUB_ENV

      - name: Cargo build
        run: ${{ env.DOCKER_COMPOSE_CMD }} cargo build --release

      - name: Yarn install and test
        shell: bash
        env:
          NODEJS_VERSION_INSTALL: 18
        run: |
          ${{ env.DOCKER_COMPOSE_CMD }} /bin/bash -c '
            set -o pipefail \
            && cd ${{ env.DOCKER_BUILD_DIR }}/zombienet-tests \
            && yarn install \
            && yarn test 2>&1 | tee ${{ env.DOCKER_BUILD_DIR }}/zombienet_test_output.txt
          '
          
      - name: Upload output(s)
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: zombienet-test-output
          path: zombienet_test_output.txt
          if-no-files-found: warn
          retention-days: 1
          compression-level: 0
          overwrite: true